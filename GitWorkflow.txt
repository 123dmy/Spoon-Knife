FLOW：.My repo->create branch->commit changes->pull request->merge
      .repo owned by others->fork->git clone->create upstream->
       create branch->commit changes->pull request->merge

1.$ git clone(pull) https://github.com/YOUR-USERNAME/Spoon-Knife
为什么要有upstream？clone下来的repo不一定就是你你之后要push的repo，所以设立一个上流是有必要的，因为这才是你真正将push的repo
              $ git remote add upstream https://github.com/octocat/Spoon-Knife.git

git branch <branch_name> #创建指定名称的分支
git checkout <branch_name> #切换到指定分支
git checkout -b <branch_name> #创建并切换到指定分支
git branch -d <branch_name>
.#删除一个干净的分支(即相对当前分支而言该分支没有新的提交记录)
git branch -D <branch_name>
.#强制删除一个分支，该分支有没有合并到当前分支的提交记录
注意：删除分支前都需要先切换到其他分支才能进行删除操作

设置提交代码时的用户信息
开始前我们需要先设置提交的用户信息，包括用户名和邮箱：
$ git config --global user.name 'runoob'
$ git config --global user.email test@runoob.com
git commit命令之前，必须使用git add命令将任何新的或修改的文件添加到索引
命令git commit -a(git status)首先查看您的工作树
git commit需要写注释
git commit -m 不用注释

git checkout main切换到main分支
git merge <branch_name> #将指定分支合并到当前分支